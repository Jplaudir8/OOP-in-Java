#BlueJ class context
comment0.target=LogAnalyzer
comment1.params=
comment1.target=LogAnalyzer()
comment1.text=\n\ Initialize\ records\ ArrayList.\n
comment10.params=
comment10.target=java.util.HashMap\ ipsForDays()
comment10.text=\n\ Creates\ a\ HashMap\ that\ maps\ days\ to\ an\ ArrayList\ of\ IP's\ that\ visited\n\ the\ website\ in\ their\ respective\ days.\ Repeated\ IP\ addresses\ are\ allowed.\n\ \n\ @return\ \ HashMap\ of\ days\ to\ their\ IP\ addresses.\n
comment11.params=ipsDay
comment11.target=java.lang.String\ dayWithMostIPVisits(java.util.HashMap)
comment11.text=\n\ Find\ the\ day\ with\ the\ most\ number\ of\ visits,\ if\ there\ is\ a\ tie,\n\ return\ any\ of\ the\ days\ found.\n\ \n\ @param\ \ \ map\ \ \ \ \ HashMap\ that\ has\ Days\ mapped\ to\ an\ array\ of\ ips.\n\ @return\ \ \ \ \ \ \ \ \ \ day\ found.\n
comment12.params=ipsDay\ day
comment12.target=java.util.ArrayList\ iPsWithMostVisitsOnDay(java.util.HashMap,\ java.lang.String)
comment12.text=\n\ \n
comment13.params=
comment13.target=void\ printAll()
comment13.text=\n\ \n
comment2.params=filename
comment2.target=void\ readFile(java.lang.String)
comment2.text=\n\ Read\ log\ file\ and\ add\ each\ line\ to\ 'records'.\n
comment3.params=
comment3.target=int\ countUniqueIPs()
comment3.text=\n\ Compute\ the\ number\ of\ unique\ IP\ addresses\ based\ on\ the\ elements\n\ that\ have\ been\ inserted\ into\ 'records'.\n\ \n\ @return\ \ The\ number\ of\ unique\ IP\ addresses\n
comment4.params=someday
comment4.target=java.util.ArrayList\ uniqueIPVisitsOnDay(java.lang.String)
comment4.text=\n\ Compute\ ArrayList\ of\ Strings\ of\ unique\ IP\ addresses\ that\ had\ access\ on\ the\ given\ day,\ using\ the\ param\ 'someday'.\n\n\ @param\ \ \ someday\ \ \ \ \ Date\ that\ will\ be\ used\ to\ look\ up\ for\ the\ IP\ addresses.\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Example\ of\ format\ to\ be\ received\ in\ the\ param\:\ "Sep\ 14",\ "Sep\ 30".\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ ArrayList\ of\ IP\ addresses\ that\ accessed\ the\ site\ on\ that\ day.\n
comment5.params=low\ high
comment5.target=int\ countUniqueIPsInRange(int,\ int)
comment5.text=\n\ Compute\ the\ number\ of\ unique\ IP\ addresses\ in\ records\ that\ have\ a\ status\ \n\ code\ in\ the\ range\ from\ low\ to\ high,\ inclusive.\n\ \n\ @param\ \ \ low\ \ \ \ \ cutoff\n\ @param\ \ \ high\ \ \ \ cutoff\n\ \n\ @return\ \ \ \ \ \ \ \ \ \ number\ of\ IPs\ that\ have\ status\ code\ in\ the\ range\ provided.\n
comment6.params=
comment6.target=java.util.HashMap\ countVisitsPerIP()
comment6.text=\n\ Compute\ the\ number\ of\ visits\ per\ Ip\ address\ to\ a\ website.\n\ \n\ @return\ \ \ \ \ \ a\ HashMap\ which\ stored\ the\ number\ of\ ocurrences.\n
comment7.params=num
comment7.target=void\ printAllHigherThanNum(int)
comment7.text=\n\ Print\ all\ log\ entries\ that\ have\ a\ status\ code\ greater\ than\ 'num'\ param.\n\ \n\ @param\ \ \ num\ \ \ \ \ the\ cutoff\ number\ that\ will\ be\ used\ to\ print.\n
comment8.params=map
comment8.target=int\ mostNumberVisitsByIP(java.util.HashMap)
comment8.text=\n\ Calculate\ the\ maximum\ number\ of\ visits\ to\ a\ website\ by\ a\ single\ IP\n\ \n\ @param\ \ \ map\ \ \ \ \ HashMap\ that\ contains\ a\ map\ of\ an\ IP\ address\ to\ the\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ number\ of\ visits\ of\ an\ IP\ address\ to\ a\ site.\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \n\ @return\ \ \ \ \ \ \ \ \ \ maximum\ number\ encountered.\n
comment9.params=map
comment9.target=java.util.ArrayList\ iPsMostVisits(java.util.HashMap)
comment9.text=\n\ Calculate\ ArrayList\ of\ Strings\ of\ IP\ addresses\ that\ all\ have\ the\ \n\ maximum\ number\ of\ visits\ to\ this\ website.\n\ \n\ @param\ \ \ map\ \ \ \ \ HashMap\ that\ contains\ a\ map\ of\ an\ IP\ address\ to\ the\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ number\ of\ visits\ of\ an\ IP\ address\ to\ a\ site.\n\ @return\ \ \ \ \ \ \ \ \ \ ArrayList\ of\ Strings\ with\ the\ IP\ addresses\ found.\n
numComments=14
